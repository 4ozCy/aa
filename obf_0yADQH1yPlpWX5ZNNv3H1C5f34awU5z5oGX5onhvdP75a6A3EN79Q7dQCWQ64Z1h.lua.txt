--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = loadstring; -- 
-- Bogus Performance Evaluation: x24.470
local v1 = loadstring([[
	local Env, upvalues = ...
	local new = newproxy(true)
	local mt = getmetatable(new)
	mt.__metatable = new
	mt.__environment = new
	mt.__index = function(t,k) return Env[k] or upvalues[k] end
	mt.__newindex = function(t,k,v)
		--if rawget(upvalues,k) then return rawset(upvalues,k,v) end
		Env[k] = v
	end
return setmetatable({},mt)
]], "");
local v2 = {};
local v3 = {};
local v4 = tonumber;
local v5 = string.byte;
local v6 = string.char;
local v7 = string.sub;
local v8 = string.gsub;
local v9 = string.rep;
local v10 = table.concat;
local v11 = table.insert;
local v12 = math.ldexp;
local v13 = getfenv or function()
	return _ENV;
end;
local v14 = setmetatable;
local v15 = pcall;
local v16 = select;
local v17 = unpack or table.unpack;
local v18 = tonumber;
local function v19(v20, v21, ...)
	local v22 = 1;
	local v23;
	v20 = v8(v7(v20, 5), "..", function(v34)
		if (v5(v34, 2) == 81) then
			v23 = v4(v7(v34, 1, 1));
			return "";
		else
			v2[130] = v6(v4(v34, 16));
			if v23 then
				v2[141] = v9(v2[130], v23);
				v23 = nil;
				return v2[141];
			else
				return v2[130];
			end
		end
	end);
	local function v24(v35, v36, v37)
		if v37 then
			v2[168] = (v35 / (2 ^ (v36 - 1))) % (2 ^ (((v37 - 1) - (v36 - 1)) + 1));
			return v2[168] - (v2[168] % 1);
		else
			v2[196] = 2 ^ (v36 - 1);
			return (((v35 % (v2[196] + v2[196])) >= v2[196]) and 1) or 0;
		end
	end
	local function v25()
		v2[221] = v5(v20, v22, v22);
		v22 = v22 + 1;
		return v2[221];
	end
	local function v26()
		v2[242], v2[243] = v5(v20, v22, v22 + 2);
		v22 = v22 + 2;
		return (v2[243] * 256) + v2[242];
	end
	local function v27()
		v2[270], v2[271], v2[272], v2[273] = v5(v20, v22, v22 + 3);
		v22 = v22 + 4;
		return (v2[273] * 16777216) + (v2[272] * 65536) + (v2[271] * 256) + v2[270];
	end
	local function v28()
		v2[308] = v27();
		v2[312] = v27();
		v2[316] = 1;
		v2[319] = (v24(v2[312], 1, 20) * (2 ^ 32)) + v2[308];
		v2[332] = v24(v2[312], 21, 31);
		v2[339] = ((v24(v2[312], 32) == 1) and -1) or 1;
		if (v2[332] == 0) then
			if (v2[319] == 0) then
				return v2[339] * 0;
			else
				v2[332] = 1;
				v2[316] = 0;
			end
		elseif (v2[332] == 2047) then
			return ((v2[319] == 0) and (v2[339] * (1 / 0))) or (v2[339] * NaN);
		end
		return v12(v2[339], v2[332] - 1023) * (v2[316] + (v2[319] / (2 ^ 52)));
	end
	local function v29(v51)
		v2[417] = nil;
		if not v51 then
			v51 = v27();
			if (v51 == 0) then
				return "";
			end
		end
		Str = v7(v20, v22, (v22 + v51) - 1);
		v22 = v22 + v51;
		v2[453] = {};
		for v67 = 1, #Str do
			v2[453][v67] = v6(v5(v7(Str, v67, v67)));
		end
		return v10(v2[453]);
	end
	local v30 = v27;
	local function v31(...)
		return {...}, v16("#", ...);
	end
	local function v32()
		v2[507] = {};
		v2[510] = {};
		v2[513] = {};
		v2[516] = {v2[507],v2[510],nil,v2[513]};
		v2[531] = v27();
		v2[535] = {};
		for v69 = 1, v2[531] do
			v2[543] = v25();
			v2[547] = nil;
			if (v2[543] == 1) then
				v2[547] = v25() ~= 0;
			elseif (v2[543] == 2) then
				v2[547] = v28();
			elseif (v2[543] == 3) then
				v2[547] = v29();
			end
			v2[535][v69] = v2[547];
		end
		v2[516][3] = v25();
		for v73 = 1, v27() do
			v2[606] = v25();
			if (v24(v2[606], 1, 1) == 0) then
				v2[619] = v24(v2[606], 2, 3);
				v2[626] = v24(v2[606], 4, 6);
				v2[633] = {v26(),v26(),nil,nil};
				if (v2[619] == 0) then
					v2[633][3] = v26();
					v2[633][4] = v26();
				elseif (v2[619] == 1) then
					v2[633][3] = v27();
				elseif (v2[619] == 2) then
					v2[633][3] = v27() - (2 ^ 16);
				elseif (v2[619] == 3) then
					v2[633][3] = v27() - (2 ^ 16);
					v2[633][4] = v26();
				end
				if (v24(v2[626], 1, 1) == 1) then
					v2[633][2] = v2[535][v2[633][2]];
				end
				if (v24(v2[626], 2, 2) == 1) then
					v2[633][3] = v2[535][v2[633][3]];
				end
				if (v24(v2[626], 3, 3) == 1) then
					v2[633][4] = v2[535][v2[633][4]];
				end
				v2[507][v73] = v2[633];
			end
		end
		for v75 = 1, v27() do
			v2[510][v75 - 1] = v32();
		end
		return v2[516];
	end
	local function v33(v61, v62, v63)
		local v64 = v61[1];
		local v65 = v61[2];
		local v66 = v61[3];
		return function(...)
			v2[855] = v64;
			v2[858] = v65;
			v2[861] = v66;
			v2[864] = v31;
			v2[867] = 1;
			v2[870] = -1;
			v2[874] = {};
			v2[877] = {...};
			v2[883] = v16("#", ...) - 1;
			v2[891] = {};
			v2[894] = {};
			for v94 = 0, v2[883] do
				if (v94 >= v2[861]) then
					v2[874][v94 - v2[861]] = v2[877][v94 + 1];
				else
					v2[894][v94] = v2[877][v94 + 1];
				end
			end
			v2[936] = (v2[883] - v2[861]) + 1;
			v2[943] = nil;
			v2[945] = nil;
			while true do
				v2[943] = v2[855][v2[867]];
				v2[945] = v2[943][1];
				if (v2[945] <= 18) then
					if (v2[945] <= 8) then
						if (v2[945] <= 3) then
							if (v2[945] <= 1) then
								if (v2[945] > 0) then
									v2[987] = v2[943][2];
									v2[992] = v2[894][v2[943][3]];
									v2[894][v2[987] + 1] = v2[992];
									v2[894][v2[987]] = v2[992][v2[943][4]];
								elseif (v2[894][v2[943][2]] == v2[943][4]) then
									v2[867] = v2[867] + 1;
								else
									v2[867] = v2[943][3];
								end
							elseif (v2[945] == 2) then
								v2[1054] = v2[943][2];
								v2[894][v2[1054]] = v2[894][v2[1054]](v17(v2[894], v2[1054] + 1, v2[870]));
							else
								v2[1078] = v2[943][2];
								v2[894][v2[1078]] = v2[894][v2[1078]](v2[894][v2[1078] + 1]);
							end
						elseif (v2[945] <= 5) then
							if (v2[945] > 4) then
								v2[894][v2[943][2]] = v2[943][3] ~= 0;
							else
								v2[1127] = nil;
								v2[894][v2[943][2]] = {};
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								v2[894][v2[943][2]] = v62[v2[943][3]];
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								v2[894][v2[943][2]] = {};
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								A = v2[943][2];
								v2[894][A] = v2[894][A](v2[894][A + 1]);
								v2[867] = v2[867] + 1;
								v2[943] = v2[855][v2[867]];
								if v2[894][v2[943][2]] then
									v2[867] = v2[867] + 1;
								else
									v2[867] = v2[943][3];
								end
							end
						elseif (v2[945] <= 6) then
							v2[1441] = nil;
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
						elseif (v2[945] > 7) then
							v2[1747] = v2[943][3];
							v2[1752] = v2[894][v2[1747]];
							for v373 = v2[1747] + 1, v2[943][4] do
								v2[1752] = v2[1752] .. v2[894][v373];
							end
							v2[894][v2[943][2]] = v2[1752];
						else
							v2[1787] = nil;
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3] ~= 0;
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						end
					elseif (v2[945] <= 13) then
						if (v2[945] <= 10) then
							if (v2[945] > 9) then
								v2[1988] = v2[943][2];
								v2[894][v2[1988]] = v2[894][v2[1988]](v17(v2[894], v2[1988] + 1, v2[943][3]));
							else
								v2[2014] = v2[943][2];
								v2[894][v2[2014]] = v2[894][v2[2014]]();
							end
						elseif (v2[945] <= 11) then
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						elseif (v2[945] > 12) then
							v2[2064] = nil;
							v2[894][v2[943][2]] = v62[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v62[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v62[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							do
								return;
							end
						else
							v2[2246] = nil;
							A = v2[943][2];
							v2[894][A] = v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						end
					elseif (v2[945] <= 15) then
						if (v2[945] == 14) then
							v2[894][v2[943][2]] = v62[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v62[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							do
								return;
							end
						else
							v2[4820] = nil;
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3] ~= 0;
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[867] = v2[943][3];
						end
					elseif (v2[945] <= 16) then
						v2[894][v2[943][2]] = v63[v2[943][3]];
					elseif (v2[945] == 17) then
						v2[5051] = v2[943][2];
						v2[5056] = v2[894][v2[5051]];
						for v375 = v2[5051] + 1, v2[943][3] do
							v11(v2[5056], v2[894][v375]);
						end
					else
						v2[5077] = nil;
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v2[894][A + 1]);
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
					end
				elseif (v2[945] <= 28) then
					if (v2[945] <= 23) then
						if (v2[945] <= 20) then
							if (v2[945] > 19) then
								v2[5370] = v2[943][2];
								v2[894][v2[5370]](v17(v2[894], v2[5370] + 1, v2[943][3]));
							else
								v2[5389] = v2[943][2];
								v2[894][v2[5389]](v2[894][v2[5389] + 1]);
							end
						elseif (v2[945] <= 21) then
							v2[5409] = nil;
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v63[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						elseif (v2[945] > 22) then
							v2[894][v2[943][2]] = v2[943][3];
						else
							v2[867] = v2[943][3];
						end
					elseif (v2[945] <= 25) then
						if (v2[945] == 24) then
							if not v2[894][v2[943][2]] then
								v2[867] = v2[867] + 1;
							else
								v2[867] = v2[943][3];
							end
						else
							v2[7929] = nil;
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A](v2[894][A + 1]);
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v62[v2[943][3]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3] ~= 0;
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							v2[894][v2[943][2]] = v2[943][3];
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							A = v2[943][2];
							v2[894][A](v17(v2[894], A + 1, v2[943][3]));
							v2[867] = v2[867] + 1;
							v2[943] = v2[855][v2[867]];
							do
								return;
							end
						end
					elseif (v2[945] <= 26) then
						if v2[894][v2[943][2]] then
							v2[867] = v2[867] + 1;
						else
							v2[867] = v2[943][3];
						end
					elseif (v2[945] > 27) then
						v2[8241] = nil;
						v2[8243] = nil;
						v2[8245] = nil;
						v2[8247] = nil;
						A = v2[943][2];
						B = v2[894][v2[943][3]];
						v2[894][A + 1] = B;
						v2[894][A] = B[v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = {};
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = {};
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = {};
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v62[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						B = v2[943][3];
						K = v2[894][B];
						for v376 = B + 1, v2[943][4] do
							K = K .. v2[894][v376];
						end
						v2[894][v2[943][2]] = K;
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = {};
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v2[894][A + 1]);
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						T = v2[894][A];
						B = v2[943][3];
						for v377 = 1, B do
							T[v377] = v2[894][A + v377];
						end
					else
						v2[8954] = nil;
						v2[8956], v2[8957] = nil;
						v2[8959] = nil;
						v2[8961] = nil;
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						B = v2[894][v2[943][3]];
						v2[894][A + 1] = B;
						v2[894][A] = B[v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						B = v2[894][v2[943][3]];
						v2[894][A + 1] = B;
						v2[894][A] = B[v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						B = v2[894][v2[943][3]];
						v2[894][A + 1] = B;
						v2[894][A] = B[v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3] ~= 0;
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						Results, Limit = v2[864](v2[894][A](v17(v2[894], A + 1, v2[943][3])));
						v2[870] = (Limit + A) - 1;
						Edx = 0;
						for v380 = A, v2[870] do
							Edx = Edx + 1;
							v2[894][v380] = Results[Edx];
						end
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[870]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A]();
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v2[894][A + 1]);
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v2[894][A + 1]);
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v2[894][A + 1]);
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v2[894][A + 1]);
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						A = v2[943][2];
						v2[894][A] = v2[894][A](v17(v2[894], A + 1, v2[943][3]));
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v63[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v2[943][3];
					end
				elseif (v2[945] <= 33) then
					if (v2[945] <= 30) then
						if (v2[945] > 29) then
							v2[11490] = v2[858][v2[943][3]];
							v2[11497] = nil;
							local v218 = {};
							NewUvals = v14({}, {__index=function(v227, v228)
								v2[11514] = v218[v228];
								return v2[11514][1][v2[11514][2]];
							end,__newindex=function(v231, v232, v233)
								v2[11534] = v218[v232];
								v2[11534][1][v2[11534][2]] = v233;
							end});
							for v237 = 1, v2[943][4] do
								v2[867] = v2[867] + 1;
								v2[11569] = v2[855][v2[867]];
								if (v2[11569][1] == 29) then
									v218[v237 - 1] = {v2[894],v2[11569][3]};
								else
									v218[v237 - 1] = {v62,v2[11569][3]};
								end
								v2[891][#v2[891] + 1] = v218;
							end
							v2[894][v2[943][2]] = v33(v2[11490], NewUvals, v63);
						else
							v2[894][v2[943][2]] = v2[894][v2[943][3]];
						end
					elseif (v2[945] <= 31) then
						do
							return;
						end
					elseif (v2[945] == 32) then
						v2[894][v2[943][2]] = v62[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]] = v62[v2[943][3]];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						v2[894][v2[943][2]][v2[943][3]] = v2[943][4];
						v2[867] = v2[867] + 1;
						v2[943] = v2[855][v2[867]];
						do
							return;
						end
					else
						v2[11810] = v2[943][2];
						v2[11815], v2[11816] = v2[864](v2[894][v2[11810]](v17(v2[894], v2[11810] + 1, v2[943][3])));
						v2[870] = (v2[11816] + v2[11810]) - 1;
						v2[11841] = 0;
						for v385 = v2[11810], v2[870] do
							v2[11841] = v2[11841] + 1;
							v2[894][v385] = v2[11815][v2[11841]];
						end
					end
				elseif (v2[945] <= 35) then
					if (v2[945] == 34) then
						v2[894][v2[943][2]] = {};
					else
						v2[894][v2[943][2]] = v62[v2[943][3]];
					end
				elseif (v2[945] <= 36) then
					v2[894][v2[943][2]] = v2[894][v2[943][3]][v2[943][4]];
				elseif (v2[945] == 37) then
					v2[11937] = v2[943][2];
					v2[11942] = v2[894][v2[11937]];
					v2[11947] = v2[943][3];
					for v389 = 1, v2[11947] do
						v2[11942][v389] = v2[894][v2[11937] + v389];
					end
				else
					v2[894][v2[943][2]][v2[943][3]] = v2[894][v2[943][4]];
				end
				v2[867] = v2[867] + 1;
			end
		end;
	end
	return v33(v32(), {}, v21)(...);
end
return vv13(), ...);